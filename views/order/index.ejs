<div class="mx-auto">
    <div>
        <% let currUser = JSON.stringify(currentUser); %> 
        <ul class="nav justify-content-center nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">To collect</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">To prepare</a>
            </li>
        </ul>
    </div>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <% if (toCollect.length == 0) { %> 
                <h5 class="orange-text center-text">You have no orders to collect. Start ordering!</h5>
            <% } %> 
            <div class="row mt-2">
                <div class="col center-text ">
                    <% for (let i = toCollect.length - 1; i >= 0; i--) { %> 
                        <% let collect = toCollect[i]; %> 
                        <% let orderTime = (collect.createdAt + "").split(" ")[1] + " " + (collect.createdAt + "").split(" ")[2] + " " + (collect.createdAt + "").split(" ")[4].split(":").splice(0, 2).join(":"); %>
                        <div class="row grey-border pt-2 pb-2">
                            <div class="col-6 justify-content-center">
                                <div class="justify-center">
                                    <h5 class="purple-text mb-1"><i class="fas fa-map-marker-alt"></i> <%= collect.seller.address %></h5>
                                    <p class="purple-text pb-0 mb-0">@<%= collect.seller.username %></p>
                                    <% let itemsComplete = true %>
                                    <% collect.items.forEach( item => { %>
                                        <% if (item.breakie.deleted && !collect.completed && !collect.cancelled) { %>
                                            <% itemsComplete = false %>
                                            <p class="orange-text">This item has been removed by the seller. Please chat to find out more.</p>
                                        <% } else { %>
                                            <p class="orange-text">+ <%= item.breakie.name %> x <%= item.qty %></p>
                                        <% } %>
                                    <% }) %> 
                                    <p class="orange-text bold mb-0">Total: $ <%= collect.price  == null ? "0.00" : collect.price %></p>
                                </div>
                            </div>
                            <div class="col">
                                <span class="top-right"><%= orderTime %></span>
                                <% if (collect.paid) { %> 
                                    <span class="badge badge-pill badge-secondary">Paid</span>
                                <% } else { %>
                                    <span class="badge badge-pill badge-danger">By cash</span>
                                <% } %>

                                <% if (!itemsComplete) { %>
                                    <span class="badge badge-pill badge-danger">Unlisted</span>
                                <% } else if (collect.completed) { %> 
                                    <span class="badge badge-pill badge-secondary">Completed</span>
                                <% } else if (collect.cancelled) { %> 
                                    <span class="badge badge-pill badge-danger">Cancelled</span>
                                <% } else { %>
                                    <span class="badge badge-pill badge-success">To be collected</span>
                                <% } %>   

                                <% if (!itemsComplete) { %>
                                    <button class="chat-btn position-bottom btn-gradient start-chat-button">
                                        <p class="display-none"><%= collect.seller._id %></p>
                                    Chat</button>
                                <% } else if (!collect.completed && !collect.cancelled){ %>
                                    <form action="/order/done/<%= collect._id %>" method="post">
                                        <button type="submit" class="position-bottom btn-gradient">Collected</button>     
                                    </form>
                                <% } %>
                                <% if (!collect.completed && itemsComplete && !collect.cancelled) { %>
                                    <a class="btn btn-danger btn-delete mt-4" href="/order/cancel/<%= collect._id %>">Cancel</a>
                                <% } %>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
            <% if (toPrepare.length == 0) { %>
                <h5 class="center-text orange-text" >You have no orders to prepare.</h5>
            <% } %>  
            <div class="row mt-2">
                <div class="col center-text">
                    <% for (let i = toPrepare.length - 1; i >= 0; i--) { %> 
                        <% let prepare = toPrepare[i]; %> 
                        <% let prepareTime = (prepare.createdAt + "").split(" ")[1] + " " + (prepare.createdAt + "").split(" ")[2] + " " + (prepare.createdAt + "").split(" ")[4].split(":").splice(0, 2).join(":"); %>
                        <div class="row grey-border pt-2 pb-2">
                            <div class="col-6 justify-content-center" id="toPrepare">
                                <div class="justify-center">
                                    <h5 class="purple-text mb-1"><i class="fas fa-map-marker-alt"></i> <%= prepare.buyer.address %></h5>
                                    <p id="buyerUsername" class="purple-text pb-0 mb-0">@<%= prepare.buyer.username %></p>
                
                                    <% let preparedItemsCollected = true %> 
                                    <% prepare.items.forEach( item => { %>
                                        <!-- order is incomplete but item removed by seller -->
                                        <% if (item.breakie.deleted && !prepare.completed && !prepare.cancelled) { %>
                                            <p class="orange-text">This food item has been removed by you.</p>
                                            <% preparedItemsCollected = false; %> 
                                        <% } else { %>
                                            <p class="orange-text">+ <%= item.breakie.name %> x <%= item.qty %></p>
                                        <% } %>
                                    <% }) %>
                                    <p class="orange-text bold mb-0">Total: $<%= prepare.price %></p>
                                </div>
                            </div>
                            <div class="col">
                                <span class="top-right"><%= prepareTime %></span>
                                <% if (prepare.paid) { %> 
                                    <span class="badge badge-pill badge-secondary">Paid</span>
                                <% } else { %>
                                    <span class="badge badge-pill badge-danger">Not paid</span>
                                <% } %>

                                <% if (!preparedItemsCollected) { %>
                                    <span class="badge badge-pill badge-danger">Unlisted</span>
                                <% } else if (prepare.completed) { %> 
                                    <span class="badge badge-pill badge-secondary">Completed</span>
                                <% } else if (prepare.cancelled) { %>
                                    <span class="badge badge-pill badge-danger">Cancelled</span>
                                <% } else { %>
                                    <span class="badge badge-pill badge-success">On the way</span>
                                <% } %>   

                                <% if (!preparedItemsCollected) { %>
                                    <button class="chat-btn position-bottom btn-gradient start-chat-button">
                                        <p class="display-none"><%= prepare.buyer._id %></p>
                                    Chat</button>
                                <% } else if (!prepare.completed && !prepare.cancelled){ %>
                                    <form action="/order/done/<%= prepare._id %>" method="post">
                                        <button type="submit" class="position-bottom btn-gradient">Picked up</button>     
                                    </form>
                                <% } %>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" style="color: orange;" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Chat with <span id="otherUser"></span></h5>
          <button type="button" id="dismissBtn" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <p id="status">Waiting....</p>
          <form>
            <div id="msgContainer"></div>
            <div class="form-group">
              <label for="message-text" class="col-form-label">Message:</label>
              <input class="form-control" id="message-text"></input>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" id="closeBtn" class="btn btn-original" data-dismiss="modal">Close</button>
          <button id="sendMsgBtn" type="button" class="btn btn-gradient white-text">Send message</button>
        </div>
      </div>
    </div>
  </div>
<script src="/socket.io/socket.io.js"></script>
<script>
    let currUser = JSON.parse(JSON.stringify(<%- currUser %>));

    // @sockets
    const socket = io();
    let sendMsgBtn = document.getElementById("sendMsgBtn");
    let sendMsg = document.getElementById("message-text");
    let responseBtn = document.getElementById("modalEvent");
    let messageContainer = document.getElementById("msgContainer");
    document.getElementById("closeBtn").addEventListener('click', closeConnection);
    document.getElementById("dismissBtn").addEventListener('click', closeConnection);
    let otherUserId = "";

    Array.from(document.getElementsByClassName('chat-btn')).forEach( element => {
        element.addEventListener('click', () => {
            otherUserId = element.childNodes[1].textContent;
            console.log(sendMsg);
            sendMsg.value = "";
            socket.emit("openChat", { originId: currUser._id, targetId: otherUserId, msg: null }); 
        });
    });

    function closeConnection() {
        socket.emit("leftChat", { originId: currUser._id, 
                targetId: otherUserId, 
                originUsername: currUser.username });
        responseBtn.classList.add("display-none");
    }

    sendMsgBtn.addEventListener('click', () => {
        appendMessage(`${currUser.username}: ${sendMsg.value}`);
        socket.emit("sendMsg", { msg: sendMsg.value, 
            originId: currUser._id, 
            targetId: otherUserId, 
            username: currUser.username 
        });
    })

    // we receive information if the other person is available
    socket.on("chatLog", msgFromServer => {
        if (msgFromServer.includes("unavailable")) {
            Swal.fire({
                title: `@${msgFromServer} Please try another time.`,
                confirmButtonColor: "#ff8e3c"
            } );
        }
        else {
            let username = msgFromServer.split(" ")[0];
            stylingModal(username);
            document.getElementById("modalEvent").click();
        }
    })

    // we receive a request to start chat, we will display a button
    socket.on("startChat", msg => {
        stylingModal(msg.username);
        responseBtn.classList.remove("display-none");
        responseBtn.addEventListener('click', () => {
            otherUserId = msg.originId;
            socket.emit("updateHeader", { originId: currUser._id, 
                msg: null, 
                targetId: otherUserId,
                username: currUser.username
            });
            updateHeader(`${msg.username} has entered the chat.`);
        })
    })

    socket.on("updateHeader", msg => {
        updateHeader(msg);
    })

    socket.on("receiveMsg", msg => { appendMessage(msg); })

    socket.on("leftChat", msg => {
        let p = document.createElement("p");
        p.textContent = msg;
        messageContainer.append(p);
    })

    function stylingModal(username) {
        document.getElementById("otherUser").textContent = "@" + username;
    }

    function appendMessage(msg) {
        let p = document.createElement("p");
        let span = document.createElement("span");
        let span2 = document.createElement("span");
        span.classList.add("bold");
        span.textContent = msg.split(": ")[0] + ": ";
        span2.textContent = msg.split(": ")[1];
        p.append(span);
        p.append(span2);
        messageContainer.append(p);
    }

    function updateHeader(msg) {
        document.getElementById("status").textContent = msg;
    }
</script>
