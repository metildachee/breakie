<span class="orange-text"><span class="bold"><%= breakies.length %></span> breakies near <span id="currentAddr">you</span></span>
<!-- <div class="container pr-0 mr-1"> -->
    <div id="hits"></div>
    <div class="row">
        <div class="col-md-8 grid">
            <p id="breakies" style="display: none"><%= JSON.stringify(breakies) %></p>
            <% breakies.forEach( (breakie, index) => { %>
                <div class="cell m-1 line-height-60">
                    <div class="height-80">
                        <div class="mx-auto">
                            <img class="square-img" src="/image/<%= breakie.image %>" alt="">
                        </div>
                        <h6 class="cell-title"><%= breakie.name %></h6>
                        <p class="m-0 purple-text "><i class="fas fa-map-marker-alt"></i> <%= breakie.creator.address %>
                        </p>
                        <a class="m-0 purple-text" href="/user/show/<%= breakie.creator._id %>">@<%= breakie.creator.username %></a>
                        <span class="m-0 purple-text "><%= distance[index] %> away <span class="badge badge-secondary"><%= breakie.cuisine.type %></span></span>
                        <% if (breakie.qty <= 0) { %>
                            <span class="badge badge-warning">Sold out</span>
                        <% } %> 
                    </div>
                    <p class="m-0 cell-price">$<%= breakie.price %>.00</p>
                    <a class="btn-original" href="/breakie/show/<%= breakie._id %>">See more</a>
                </div>
            <% }) %>
        </div>
        <div class="mapContainer">
        <!-- <div class="col-md-4"> -->
            <div class="absolute-right" id="map"><%= key %></div>
        </div>
    </div>
<!-- </div> -->
<!-- <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<%= key %>&callback=initMap">
</script> -->
<script src="https://cdn.jsdelivr.net/npm/algoliasearch@3/dist/algoliasearchLite.min.js"></script>
<script src="https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js"></script>
<script>
    let currentPos;
    // @desc on page loads
    (function getCurrentLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                currentPos = { lat: position.coords.latitude, lng: position.coords.longitude };
                $.post("/", currentPos).
                done(() => console.log("information sent")).
                fail(() => console.log('an error occured'));
            })
        }
        else { console.log("an error occured");}
    })();

    let breakies = JSON.parse(document.getElementById("breakies").innerText);
    // function initMap() {
    //   var map = new google.maps.Map(
    //     document.getElementById('map'), {zoom: 14, center: currentPos });
    //     let marker = new google.maps.Marker({position: currentPos, map: map});
    //     breakies.forEach( breakie => {
    //         let sellerCoords = {lat: parseFloat(breakie.creator.location.coordinates[1]), lng: parseFloat(breakie.creator.location.coordinates[0])};
    //         let icon = "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png";
    //         setMarker(sellerCoords, icon, map);
    //     })

    //     let geocoder = new google.maps.Geocoder();
    //     geocoder.geocode({ location: currentPos }, (results, status) => {
    //         if (status == "OK")  {
    //             console.log(results);
    //             document.getElementById("currentAddr").textContent = results[5].formatted_address;
    //         }
    //     })
    // }

    // function setMarker(coordinates, iconType, currentMap) {
    //     let market = new google.maps.Marker({position: coordinates, 
    //         map: currentMap,
    //         icon: iconType
    //     });
    // }

    //@desc algolia
    const client = algoliasearch('73KCNG918X', 'ca6e613de216883f20c2f6a51675b9bb');
    const breakie = client.initIndex('breakie');
    let currentInList = [];
    autocomplete(
        '#aa-search-input',
        {
            debug: true,
            templates: {
            dropdownMenu:
                '<div class="aa-dataset-player"></div>'
            },
        },
        [
            {
                source: autocomplete.sources.hits(breakie, {hitsPerPage: 7}),
                displayKey: 'name',
                name: 'player',
                templates: {
                    header: '<div class="aa-suggestions-category">Breakies</div>',
                    suggestion({_highlightResult}) {
                    console.log(_highlightResult);
                    currentInList = [];
                    currentInList.push(_highlightResult);
                    return `<span>${_highlightResult.name.value} <span class="grey-text">@${_highlightResult.creator.username.value}</span></span>`;
                    },
                    empty: '<div class="aa-empty">No matching breakies</div>',
                },
            },
        ]
    );
</script>