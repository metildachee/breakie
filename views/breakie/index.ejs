<span class="orange-text"><span class="bold"><%= breakies.length %></span> breakies near 
    <span id="currentAddr">you 
        <span class="badge badge-warning">
            Refresh to see new breakies
        </span>
    </span>
</span>
    <div class="row">
        <div class="col-md-8 grid">
            <p id="breakies" style="display: none"><%= JSON.stringify(breakies) %></p>
            <p id="sellers" style="display: none"><%= JSON.stringify(sellers) %></p>
            <% let hoverArray = {}; %> 
            <% breakies.forEach( (breakie, index) => { %>
                <div class="cell m-1 line-height-60" id="index-<%= index %>">
                    <div class="height-80">
                        <div class="mx-auto">
                            <img class="square-img" src="/image/<%= breakie.image %>" alt="">
                        </div>
                        <h6 class="cell-title mb-0"><%= breakie.name %></h6>
                        <p class="m-0 purple-text "><i class="fas fa-map-marker-alt"></i> <%= breakie.creator.address %></p>
                        <a class="m-0 purple-text" href="/user/show/<%= breakie.creator._id %>">@<%= breakie.creator.username %></a>
                        <span class="badge badge-info"><%= distance[index] %> away</span> 
                        <span class="badge badge-secondary"><%= breakie.cuisine.type %></span>
                        <span class="badge badge-secondary"><%= breakie.qty %> portion(s)</span>
                        <% if (breakie.qty <= 0) { %>
                            <span class="badge badge-danger">Sold out</span>
                        <% } %> 
                    </div>
                    <p class="mt-3 cell-price">$<%= breakie.price %>.00</p>
                    <a class="btn-original" href="/breakie/show/<%= breakie._id %>">See more</a>
                    <% hoverArray[breakie.creator.username] == undefined ? hoverArray[breakie.creator.username] =  [index] : hoverArray[breakie.creator.username].push(index); %> 
                </div>
            <% }) %>
        </div>
        <div class="mapContainer">
            <div class="absolute-right" id="map"><%= key %></div>
        </div>
        <% hoverArray = JSON.stringify(hoverArray) %>
    </div>
<script
    src="https://maps.googleapis.com/maps/api/js?key=<%= key %>&callback=initMap">
</script>
<script src="https://cdn.jsdelivr.net/npm/algoliasearch@3/dist/algoliasearchLite.min.js"></script>
<script src="https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js"></script>
<script defer>
    let currentPos;
    // @desc on page loads
    (function getCurrentLocation() {
        if (!navigator.geolocation) return;
        navigator.geolocation.getCurrentPosition( 
            position => {
            currentPos = { lat: position.coords.latitude, lng: position.coords.longitude };
            $.post("/", currentPos).
            done(() => console.log( "Coordinates sent successfully" )).
            fail(() => console.log('An error occured during transmission.'));
        }, 
            err => { console.log(err); })
    })();

    let breakies = JSON.parse(document.getElementById("breakies").innerText);
    let sellers = JSON.parse(document.getElementById("sellers").innerText);

    let distance = "<%= distance %>";
    let hoverArray = <%- JSON.stringify(hoverArray) %>;
    hoverArray = JSON.parse(hoverArray);

    // @un-comment
    function initMap() {
        alert("meow");
    }

    function updateNeighbour() {
        let geocoder = new google.maps.Geocoder();
        geocoder.geocode({ location: currentPos }, (results, status) => {
            if (status == "OK") document.getElementById("currentAddr").textContent = results[1].formatted_address;
    })}

    // @desc algolia
    const client = algoliasearch('73KCNG918X', 'ca6e613de216883f20c2f6a51675b9bb');
    const breakie = client.initIndex('breakie');
    autocomplete(
        '#aa-search-input',
        {
            debug: true,
            templates: {
            dropdownMenu:
                '<div class="aa-dataset-player"></div>'
            },
        },
        [
            {
                source: autocomplete.sources.hits(breakie, {
                    hitsPerPage: 7,
                    filters: "deleted=0"
                }),                
                displayKey: 'name',
                name: 'player',
                templates: {
                    header: '<div class="aa-suggestions-category">Breakies</div>',
                    suggestion({_highlightResult}) {
                    return `<span>${_highlightResult.name.value} <span class="grey-text">@${_highlightResult.creator.username.value}</span></span>`;
                    },
                    empty: '<div class="aa-empty">No matching breakies</div>',
                },
            },
        ]
    );
</script>